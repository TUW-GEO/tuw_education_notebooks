[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Teaching and Learning EO with Jupyter",
    "section": "",
    "text": "Preface\nThis is a demonstration of the EODC/TU Wien JupyterHub with educational notebooks describing some common research patterns. The examples used represent some of the main research lines of the Remote Sensing Unit at the Department of Geodesy and Geoinformation at the TU Wien.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01_notebook_as_an_app.html",
    "href": "01_notebook_as_an_app.html",
    "title": "1  Reverend Bayes updates our Believe in Flood Detection",
    "section": "",
    "text": "1.1 From Backscattering to Flood Mapping\nThis notebook explains how microwave (\\(\\sigma^0\\)) backscattering (Figure 1.1) can be used to map the extent of a flood. We replicate in this exercise the work of Bauer-Marschallinger et al. (2022) on the TU Wien Bayesian-based flood mapping algorithm.\nIn the following lines we create a map with EOmaps (Quast 2024) of the \\(\\sigma^0\\) backscattering values.\nCode\nm = Maps(ax=121, crs=3857)\nm.set_data(data=sig0_dc, x=\"x\", y=\"y\", parameter=\"SIG0\", crs=Maps.CRS.Equi7_EU)\nm.plot_map()\nm.add_colorbar(label=\"$\\sigma^0$ (dB)\", orientation=\"vertical\")\nm.add_scalebar(n=5)\nm2 = m.new_map(ax=122, crs=3857)\nm2.set_extent(m.get_extent())\nm2.add_wms.OpenStreetMap.add_layer.default()\nm.apply_layout(\n    {\n        'figsize': [7.5, 5.25],\n        '0_map': [0.05, 0.18, 0.35, 0.64],\n        '1_cb': [0.8125, 0.1, 0.1, 0.8],\n        '1_cb_histogram_size': 0.8,\n        '2_map': [0.4375, 0.18, 0.35, 0.64]\n        }\n    )\nm.show()\n\n\n\n\n\n\n\nFigure 1.1: Area targeted for \\(\\sigma^0\\) backscattering is the Greek region of Thessaly, which experienced a major flood in February of 2018.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reverend Bayes updates our Believe in Flood Detection</span>"
    ]
  },
  {
    "objectID": "01_notebook_as_an_app.html#microwave-backscattering-over-land-and-water",
    "href": "01_notebook_as_an_app.html#microwave-backscattering-over-land-and-water",
    "title": "1  Reverend Bayes updates our Believe in Flood Detection",
    "section": "1.2 Microwave Backscattering over Land and Water",
    "text": "1.2 Microwave Backscattering over Land and Water\nReverend Bayes was concerned with two events, one “the hypothesis” occurring before the other “the evidence”. If we know the cause it is easy to logically deduce the probability of an effect. But in this case we want to deduce the probability of a cause from an observed effect, also known as “reversed probability”. In the case of flood mapping we have \\(\\sigma^0\\) backscatter observations over land (effect) and we want to deduce the probability of flooding (F) and non-flooding (NF).\nPhrased differently we want to know the probability of flooding given a pixel’s \\(\\sigma^0\\):\n\\[P(F|\\sigma^0)\\]\nand the probability of a pixel being not flooded given a certain \\(\\sigma^0\\):\n\\[P(NF|\\sigma^0).\\]\nBayes showed that these can be deduced from the observation that forward and reversed probability are equal, so that:\n\\[P(F|\\sigma^0)P(\\sigma^0) = P(\\sigma^0|F)P(F)\\]\nand\n\\[P(NF|\\sigma^0)P(\\sigma^0) = P(\\sigma^0|NF)P(NF).\\]\nThe forward probability of \\(\\sigma^0\\) given flood (\\(P(\\sigma^0|F)\\)) and \\(\\sigma^0\\) given non-flood (\\(P(\\sigma^0|NF)\\)) can be extracted from past information on backscattering over land and water surfaces. As seen in the sketch below (Figure 1.2), the characteristics of backscattering over land and water differ considerably.\n\n\n\n\n\n\nFigure 1.2: Schematic backscattering over land and water. Image from Geological Survey Ireland",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reverend Bayes updates our Believe in Flood Detection</span>"
    ]
  },
  {
    "objectID": "01_notebook_as_an_app.html#likelihoods",
    "href": "01_notebook_as_an_app.html#likelihoods",
    "title": "1  Reverend Bayes updates our Believe in Flood Detection",
    "section": "1.3 Likelihoods",
    "text": "1.3 Likelihoods\nThese so-called likelihoods of \\(P(\\sigma^0|F)\\) and \\(P(\\sigma^0|NF)\\) can thus be calculated from past backscattering information. Without going into the details of how these likelihoods are calculated, you can click on a pixel of the map to plot the likelihoods of \\(\\sigma^0\\) being governed by land or water.\n\n\nCode\nview_bayes_flood(sig0_dc)\n\n\n\n\n\n\n\nFigure 1.3: Likelihoods for \\(\\sigma^0\\) being associated with land or water for 1 pixel in the Greek area of Thessaly. Likelihoods are calculated over a range of \\(\\sigma^0\\). The pixel’s observed \\(\\sigma^0\\) is given with a vertical line. Click on the map to re-calculate and update this figure for another pixel in the study area. Map created with EOmaps (Quast 2024).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reverend Bayes updates our Believe in Flood Detection</span>"
    ]
  },
  {
    "objectID": "01_notebook_as_an_app.html#posteriors",
    "href": "01_notebook_as_an_app.html#posteriors",
    "title": "1  Reverend Bayes updates our Believe in Flood Detection",
    "section": "1.4 Posteriors",
    "text": "1.4 Posteriors\nHaving calculated the likelihoods, we can now move on to calculate the probability of (non-)flooding given a pixel’s \\(\\sigma^0\\). These so-called “posteriors” need on more piece of information as can be seen in the equation above. We need the probability whether a pixel is flooded \\(P(F)\\) or non-flooded \\(P(NF)\\). We can of course not estimate this information precisely, so our best estimate is that the chance of flooding versus non-flooding of a pixel is 50-50: a coin flip. This subjective prior believe is a fundament of Bayesian statistics and we use the likelihood to update our belief in this particular hypothesis. We now can also calculate the probability of backscattering \\(P(\\sigma^0)\\), as the weighted average of the water and land likelihoods. The latter ensures that our updated evidence (or posteriors) ranges between 0 to 1.\nThe following code block shows how we calculate the priors.\n\n\nCode\ndef calc_posteriors(water_likelihood, land_likelihood):\n    evidence = (water_likelihood * 0.5) + (land_likelihood * 0.5)\n    return (water_likelihood * 0.5) / evidence,  (land_likelihood * 0.5) / evidence\n\n\nWe can plot these posteriors of the probability of flooding and non-flooding again and compare these to pixel’s measured \\(\\sigma^0\\). Click on a pixel to calculate the posterior probability.\n\n\nCode\nview_bayes_flood(sig0_dc, calc_posteriors)\n\n\n\n\n\n\n\nFigure 1.4: Posterior probabilities for \\(\\sigma^0\\) of 1 pixel being associated with land for water in the Greek area of Thessaly. Click on the map to re-calculate and update this figure for another pixel in the study area. Map created with EOmaps (Quast 2024).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reverend Bayes updates our Believe in Flood Detection</span>"
    ]
  },
  {
    "objectID": "01_notebook_as_an_app.html#flood-classification",
    "href": "01_notebook_as_an_app.html#flood-classification",
    "title": "1  Reverend Bayes updates our Believe in Flood Detection",
    "section": "1.5 Flood Classification",
    "text": "1.5 Flood Classification\nWe are now ready to combine all this information and classify the pixels according to the probability of flooding given the backscatter value of 1 pixel. Here we just look whether the probability of flooding is higher than non-flooding:\n\n\nCode\ndef bayesian_flood_decision(id, sig0_dc):\n    nf_post_prob, f_post_prob = calc_posteriors(*calc_likelihoods(id,  sig0_dc))\n    return np.greater(f_post_prob, nf_post_prob)\n\n\nClick on a point in the below map to see the likelihoods and posterior distributions (in the left-hand subplots).\n\n\nCode\nview_bayes_flood(sig0_dc, calc_posteriors, bayesian_flood_decision)\n\n\n\n\n\n\n\nFigure 1.5: Flood extent of the Greek region of Thessaly based on Bayesian probabilities are shown on the map superimposed on an open street map. Click on a pixel to generate the point’s water and land likelihoods as well as the posterior probabilities. Map created with EOmaps (Quast 2024).\n\n\n\n\n\n\n\n\nBauer-Marschallinger, Bernhard, Senmao Cao, Mark Edwin Tupas, Florian Roth, Claudio Navacchi, Thomas Melzer, Vahid Freeman, and Wolfgang Wagner. 2022. “Satellite-Based Flood Mapping Through Bayesian Inference from a Sentinel-1 SAR Datacube.” Remote Sensing 14 (15): 3673. https://doi.org/10.3390/rs14153673.\n\n\nQuast, Raphael. 2024. “Getting Started — EOmaps Documentation.” https://eomaps.readthedocs.io/en/latest/.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reverend Bayes updates our Believe in Flood Detection</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html",
    "href": "02_counterexample.html",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "",
    "text": "2.1 Science and Art\nData visualization depends on art to convey stories from data through the combination of geometric objects and color with science. In the ideal case the information should be easily extractable from the visualization, but at the same time the scientific elements should be to the point accurate. The latter is important as false graphical representations can lead to wrong perception and interpretation, which, in turn, leads to wrongful decision making. These mistakes can be made intentionally, and thus be fraudulent, but are more often innocent mistakes with potentially far reaching consequences. When plotting data on maps we have to consider even more aspects, like the geographic projection, grid types and mapping of variables as a third dimension to a suitable color space.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#tu-wien-surface-soil-moisture-developed-for-ghg-kit",
    "href": "02_counterexample.html#tu-wien-surface-soil-moisture-developed-for-ghg-kit",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.2 TU Wien Surface Soil Moisture developed for GHG-Kit",
    "text": "2.2 TU Wien Surface Soil Moisture developed for GHG-Kit\nFor the examples in this notebook we will use soil moisture developed for GHG-Kit. To retrieve surface soil moisture data we exploit the general linear relationship between Sentinel-1 microwave backscattering and soil moisture. The change detection method developed at TU Wien can be summarised in the most simple terms by calculating the driest and wettest condition within a time period and then relating the observed backscatter to retrieve the relative soil moisture or “wetness” in percent as shown in Figure 2.1.\n\n\n\n\n\n\nFigure 2.1: Change detection method for retrieving surface soil moisture.\n\n\n\nFor the examples we will show a subset of data over Austria. In Austria, two prominent challenges for soil moisture occur, these include:\n\nPronounced geometric effects from varying viewing angles due to the variable topography in and around the Alps.\nStrong vegetation cover over dense forests.\n\nIn the Soil Moisture Product developed for GHG-Kit we address these challenges, using radio metric terrain-corrected backscatter data to “flatten” the terrain and static spatial filtering of dense vegetation at high resolution (See Supplement).\nIn the following lines we load a subset of the soil moisture dataset with xarray, which is stored as a Zarr archive.\n\n\nCode\nSSM_dc = xr.open_zarr(RESOURCES / \"SSM-CD-SIG40-R-DVEG_2018.zarr/\")\nSSM_dc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 8GB\nDimensions:      (time: 723, y: 1200, x: 1200)\nCoordinates:\n  * time         (time) datetime64[ns] 6kB 2018-01-01T05:08:47 ... 2018-12-31...\n  * x            (x) float64 10kB 4.8e+06 4.801e+06 ... 5.399e+06 5.4e+06\n  * y            (y) float64 10kB 1.8e+06 1.799e+06 ... 1.201e+06 1.2e+06\nData variables:\n    band_data    (time, y, x) float64 8GB dask.array&lt;chunksize=(100, 100, 100), meta=np.ndarray&gt;\n    spatial_ref  int64 8B ...xarray.DatasetDimensions:time: 723y: 1200x: 1200Coordinates: (3)time(time)datetime64[ns]2018-01-01T05:08:47 ... 2018-12-...array(['2018-01-01T05:08:47.000000000', '2018-01-01T17:07:13.000000000',\n       '2018-01-02T05:01:40.000000000', ..., '2018-12-30T16:42:07.000000000',\n       '2018-12-31T05:26:15.000000000', '2018-12-31T16:34:48.000000000'],\n      dtype='datetime64[ns]')x(x)float644.8e+06 4.801e+06 ... 5.4e+06array([4800250., 4800750., 4801250., ..., 5398750., 5399250., 5399750.])y(y)float641.8e+06 1.799e+06 ... 1.2e+06array([1799750., 1799250., 1798750., ..., 1201250., 1200750., 1200250.])Data variables: (2)band_data(time, y, x)float64dask.array&lt;chunksize=(100, 100, 100), meta=np.ndarray&gt;AREA_OR_POINT :AreaLinearSegmentedColormap :{'name': 'ssm', 'segmentdata': {'red': [[0.0, 0.578125, 0.578125], [0.31620553359683795, 0.9453125, 0.9453125], [0.4743083003952569, 0.49609375, 0.49609375], [0.7913043478260869, 0.109375, 0.8984375], [0.9881422924901185, 0.8984375, 0], [0.991304347826087, 0, 0.8984375], [1.0, 0.8984375, 0.8984375]], 'green': [[0.0, 0.3125, 0.3125], [0.31620553359683795, 0.89453125, 0.89453125], [0.4743083003952569, 0.73046875, 0.73046875], [0.7913043478260869, 0.21875, 0.8984375], [0.9881422924901185, 0.8984375, 0], [0.991304347826087, 0, 0.8984375], [1.0, 0.8984375, 0.8984375]], 'blue': [[0.0, 0.08984375, 0.08984375], [0.31620553359683795, 0.4609375, 0.4609375], [0.4743083003952569, 0.85546875, 0.85546875], [0.7913043478260869, 0.546875, 0.8984375], [0.9881422924901185, 0.8984375, 1.0], [0.991304347826087, 1.0, 0.8984375], [1.0, 0.8984375, 0.8984375]]}, 'N': 256, 'gamma': 1.0}creation_date :2023-04-10 13:33:14creator :s1_ssm_cd_tuwdry_ref_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR40-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR40-R-DVEG-TAG-PERC10_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tifengine_used :NUMBAgrid_mapping :spatial_reflia_source :/eodc/private/tuwgeo/projects/private/ghg-kit/plia_500m/PLIA-TAG-R/V1M0R1/EQUI7_EU500M/E048N012T6/PLIA-TAG-MEAN-R_20200103T050846_20201128T051008__D22_E048N012T6_EU500M_V1M0R1__TUWIEN.tiflong_name :SSMreference_angle :40run_number :1sig0_source :/eodc/private/tuwgeo/projects/private/ghg-kit/bs_500m/GMR-R-DVEG/V1M0R1/EQUI7_EU500M/E048N012T6/GMR-R-DVEG_20180101T050847__VV_D22_E048N012T6_EU500M_V1M0R1_S1BIWGRDH1.tifslope_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR-R-DVEG-TAG-LR-SLOPE_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tiftimespan_of_parametrisation :2016 - 2021value_info :Surface soil moisture in percent. Estimated using TUW change detection algorithm.wet_ref_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR40-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR40-R-DVEG-TAG-PERC90_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tifworker_git_commit :8872877worker_git_name :s1_ssm_cd_tuwworker_git_tag :v0.0.0wrapper_git_commit :Nonewrapper_git_name :ghg-kitwrapper_git_tag :v0.1.0\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n7.76 GiB\n7.63 MiB\n\n\nShape\n(723, 1200, 1200)\n(100, 100, 100)\n\n\nDask graph\n1152 chunks in 2 graph layers\n\n\nData type\nfloat64 numpy.ndarray\n\n\n\n\n                                                                                   1200 1200 723\n\n\n\n\nspatial_ref()int64...GeoTransform :4800000.0 500.0 0.0 1800000.0 0.0 -500.0crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]false_easting :5837287.81977false_northing :2121415.69617geographic_crs_name :WGS 84grid_mapping_name :azimuthal_equidistanthorizontal_datum_name :World Geodetic System 1984inverse_flattening :298.257223563latitude_of_projection_origin :53.0longitude_of_prime_meridian :0.0longitude_of_projection_origin :24.0prime_meridian_name :Greenwichprojected_crs_name :Azimuthal_Equidistantreference_ellipsoid_name :WGS 84semi_major_axis :6378137.0semi_minor_axis :6356752.314245179spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]][1 values with dtype=int64]Indexes: (3)timePandasIndexPandasIndex(DatetimeIndex(['2018-01-01 05:08:47', '2018-01-01 17:07:13',\n               '2018-01-02 05:01:40', '2018-01-02 16:57:47',\n               '2018-01-03 04:52:25', '2018-01-03 16:51:11',\n               '2018-01-04 05:33:43', '2018-01-04 16:42:25',\n               '2018-01-05 05:26:33', '2018-01-05 16:34:16',\n               ...\n               '2018-12-27 05:08:54', '2018-12-27 17:07:20',\n               '2018-12-28 05:01:54', '2018-12-28 16:58:19',\n               '2018-12-29 04:53:19', '2018-12-29 16:51:18',\n               '2018-12-30 05:34:40', '2018-12-30 16:42:07',\n               '2018-12-31 05:26:15', '2018-12-31 16:34:48'],\n              dtype='datetime64[ns]', name='time', length=723, freq=None))xPandasIndexPandasIndex(Index([4800250.0, 4800750.0, 4801250.0, 4801750.0, 4802250.0, 4802750.0,\n       4803250.0, 4803750.0, 4804250.0, 4804750.0,\n       ...\n       5395250.0, 5395750.0, 5396250.0, 5396750.0, 5397250.0, 5397750.0,\n       5398250.0, 5398750.0, 5399250.0, 5399750.0],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([1799750.0, 1799250.0, 1798750.0, 1798250.0, 1797750.0, 1797250.0,\n       1796750.0, 1796250.0, 1795750.0, 1795250.0,\n       ...\n       1204750.0, 1204250.0, 1203750.0, 1203250.0, 1202750.0, 1202250.0,\n       1201750.0, 1201250.0, 1200750.0, 1200250.0],\n      dtype='float64', name='y', length=1200))Attributes: (0)\n\n\n\nWe resample this dataset along the time dimension thereby aggregating surface soil moisture as mean values over months.\n\n\nCode\nSSM_dc_monthly = SSM_dc.resample(time=\"ME\").mean()\nSSM_dc_monthly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 138MB\nDimensions:      (time: 12, y: 1200, x: 1200)\nCoordinates:\n  * x            (x) float64 10kB 4.8e+06 4.801e+06 ... 5.399e+06 5.4e+06\n  * y            (y) float64 10kB 1.8e+06 1.799e+06 ... 1.201e+06 1.2e+06\n  * time         (time) datetime64[ns] 96B 2018-01-31 2018-02-28 ... 2018-12-31\nData variables:\n    band_data    (time, y, x) float64 138MB dask.array&lt;chunksize=(3, 100, 100), meta=np.ndarray&gt;\n    spatial_ref  (time) int64 96B 0 0 0 0 0 0 0 0 0 0 0 0xarray.DatasetDimensions:time: 12y: 1200x: 1200Coordinates: (3)x(x)float644.8e+06 4.801e+06 ... 5.4e+06array([4800250., 4800750., 4801250., ..., 5398750., 5399250., 5399750.])y(y)float641.8e+06 1.799e+06 ... 1.2e+06array([1799750., 1799250., 1798750., ..., 1201250., 1200750., 1200250.])time(time)datetime64[ns]2018-01-31 ... 2018-12-31array(['2018-01-31T00:00:00.000000000', '2018-02-28T00:00:00.000000000',\n       '2018-03-31T00:00:00.000000000', '2018-04-30T00:00:00.000000000',\n       '2018-05-31T00:00:00.000000000', '2018-06-30T00:00:00.000000000',\n       '2018-07-31T00:00:00.000000000', '2018-08-31T00:00:00.000000000',\n       '2018-09-30T00:00:00.000000000', '2018-10-31T00:00:00.000000000',\n       '2018-11-30T00:00:00.000000000', '2018-12-31T00:00:00.000000000'],\n      dtype='datetime64[ns]')Data variables: (2)band_data(time, y, x)float64dask.array&lt;chunksize=(3, 100, 100), meta=np.ndarray&gt;AREA_OR_POINT :AreaLinearSegmentedColormap :{'name': 'ssm', 'segmentdata': {'red': [[0.0, 0.578125, 0.578125], [0.31620553359683795, 0.9453125, 0.9453125], [0.4743083003952569, 0.49609375, 0.49609375], [0.7913043478260869, 0.109375, 0.8984375], [0.9881422924901185, 0.8984375, 0], [0.991304347826087, 0, 0.8984375], [1.0, 0.8984375, 0.8984375]], 'green': [[0.0, 0.3125, 0.3125], [0.31620553359683795, 0.89453125, 0.89453125], [0.4743083003952569, 0.73046875, 0.73046875], [0.7913043478260869, 0.21875, 0.8984375], [0.9881422924901185, 0.8984375, 0], [0.991304347826087, 0, 0.8984375], [1.0, 0.8984375, 0.8984375]], 'blue': [[0.0, 0.08984375, 0.08984375], [0.31620553359683795, 0.4609375, 0.4609375], [0.4743083003952569, 0.85546875, 0.85546875], [0.7913043478260869, 0.546875, 0.8984375], [0.9881422924901185, 0.8984375, 1.0], [0.991304347826087, 1.0, 0.8984375], [1.0, 0.8984375, 0.8984375]]}, 'N': 256, 'gamma': 1.0}creation_date :2023-04-10 13:33:14creator :s1_ssm_cd_tuwdry_ref_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR40-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR40-R-DVEG-TAG-PERC10_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tifengine_used :NUMBAgrid_mapping :spatial_reflia_source :/eodc/private/tuwgeo/projects/private/ghg-kit/plia_500m/PLIA-TAG-R/V1M0R1/EQUI7_EU500M/E048N012T6/PLIA-TAG-MEAN-R_20200103T050846_20201128T051008__D22_E048N012T6_EU500M_V1M0R1__TUWIEN.tiflong_name :SSMreference_angle :40run_number :1sig0_source :/eodc/private/tuwgeo/projects/private/ghg-kit/bs_500m/GMR-R-DVEG/V1M0R1/EQUI7_EU500M/E048N012T6/GMR-R-DVEG_20180101T050847__VV_D22_E048N012T6_EU500M_V1M0R1_S1BIWGRDH1.tifslope_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR-R-DVEG-TAG-LR-SLOPE_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tiftimespan_of_parametrisation :2016 - 2021value_info :Surface soil moisture in percent. Estimated using TUW change detection algorithm.wet_ref_source :/eodc/private/tuwgeo/projects/private/ghg-kit/ssm_500m/cd_ssm/params/GMR40-R-DVEG-TAG/V1M1R1/EQUI7_EU500M/E048N012T6/GMR40-R-DVEG-TAG-PERC90_20160101T050156_20201231T164220___E048N012T6_EU500M_V1M1R1_S1IWGRDH_TUWIEN.tifworker_git_commit :8872877worker_git_name :s1_ssm_cd_tuwworker_git_tag :v0.0.0wrapper_git_commit :Nonewrapper_git_name :ghg-kitwrapper_git_tag :v0.1.0\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n131.84 MiB\n234.38 kiB\n\n\nShape\n(12, 1200, 1200)\n(3, 100, 100)\n\n\nDask graph\n1008 chunks in 22 graph layers\n\n\nData type\nfloat64 numpy.ndarray\n\n\n\n\n                                                                                 1200 1200 12\n\n\n\n\nspatial_ref(time)int640 0 0 0 0 0 0 0 0 0 0 0GeoTransform :4800000.0 500.0 0.0 1800000.0 0.0 -500.0crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]false_easting :5837287.81977false_northing :2121415.69617geographic_crs_name :WGS 84grid_mapping_name :azimuthal_equidistanthorizontal_datum_name :World Geodetic System 1984inverse_flattening :298.257223563latitude_of_projection_origin :53.0longitude_of_prime_meridian :0.0longitude_of_projection_origin :24.0prime_meridian_name :Greenwichprojected_crs_name :Azimuthal_Equidistantreference_ellipsoid_name :WGS 84semi_major_axis :6378137.0semi_minor_axis :6356752.314245179spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])Indexes: (3)xPandasIndexPandasIndex(Index([4800250.0, 4800750.0, 4801250.0, 4801750.0, 4802250.0, 4802750.0,\n       4803250.0, 4803750.0, 4804250.0, 4804750.0,\n       ...\n       5395250.0, 5395750.0, 5396250.0, 5396750.0, 5397250.0, 5397750.0,\n       5398250.0, 5398750.0, 5399250.0, 5399750.0],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([1799750.0, 1799250.0, 1798750.0, 1798250.0, 1797750.0, 1797250.0,\n       1796750.0, 1796250.0, 1795750.0, 1795250.0,\n       ...\n       1204750.0, 1204250.0, 1203750.0, 1203250.0, 1202750.0, 1202250.0,\n       1201750.0, 1201250.0, 1200750.0, 1200250.0],\n      dtype='float64', name='y', length=1200))timePandasIndexPandasIndex(DatetimeIndex(['2018-01-31', '2018-02-28', '2018-03-31', '2018-04-30',\n               '2018-05-31', '2018-06-30', '2018-07-31', '2018-08-31',\n               '2018-09-30', '2018-10-31', '2018-11-30', '2018-12-31'],\n              dtype='datetime64[ns]', name='time', freq='ME'))Attributes: (0)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#how-not-to-color-your-map",
    "href": "02_counterexample.html#how-not-to-color-your-map",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.3 How (not) to color your Map",
    "text": "2.3 How (not) to color your Map\nNow we are ready to plot the monthly soil moisture data on a map. To plot one variable like soil moisture on the x (longitude) and y (latitude) dimensions requires finding a good representation in a 3D colorspace. This is also referred to as pseudocoloring: a method for revealing aspects of the data over a continuous plane. For effective pseudocoloring we need to find the correct colormap. We can ask ourselves the following questions:\n\nWhat do we know about the data? Is there e.g. a critical value to which compare the data?\nIs there an intuitive color scheme that nicely translates to the variable including the distribution of the data.\n\nWe can choose from the following types of colormaps:\n\nSequential: steps in the variable space are equal to steps in color space (uniform colormaps).\nDiverging: if we have a critical middle value to which we want to compare the data.\nQualitative: if we have unordered categorical data.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#the-bad",
    "href": "02_counterexample.html#the-bad",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.4 The Bad",
    "text": "2.4 The Bad\nIn the following maps we can see what can go wrong when we don’t take these aspects into consideration.\n\n\nCode\nview_monthly_ssm(SSM_dc_monthly, \"seismic\")\n\n\n\n\n\n\n\n\nFigure 2.2: Monthly aggregated surface soil moisture (%) for January, April, July and October of 2018 retrieved with the TU Wien algorithm developed for the GHG-Kit project. Maps created with EOmaps (Quast 2024).\n\n\n\n\n\nWhat went wrong in the above maps? The first mistake is that we took a diverging colormap, although the data does not have a critical middle value. The sharp contrast between the blue and red further make it appear as if the data is binary, but in reality we have uniformly spaced values from a sample distribution that approximates a normal distribution (as can be seen from the histograms). On top of that, we have picked a colormap which includes white. There is also information in what we don’t see on these maps: e.g. missing data points. But by choosing to include white we give the false impression of missing data where we actually have a soil moisture saturation of 50%.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#the-ugly",
    "href": "02_counterexample.html#the-ugly",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.5 The Ugly",
    "text": "2.5 The Ugly\nLet’s fix the first problem. We do this by choosing the sequential “viridis” colormap. In this colormap the color is a linear function of the variable with a very wide perceptual range (e.g. it is very colorful). Viridis is, furthermore, colorblindness friendly and prints well in grayscale whilst preserving perceptual uniformity and breadth of the range.\n\n\nCode\nview_monthly_ssm(SSM_dc_monthly, \"viridis\")\n\n\n\n\n\n\n\n\nFigure 2.3: Monthly aggregated surface soil moisture (%) for January, April, July and October of 2018 retrieved with the TU Wien algorithm developed for the GHG-Kit project. Maps created with EOmaps (Quast 2024).\n\n\n\n\n\nThis colormap fixes the previous issues. We see much more nuance in the variance of soil moisture. Foremost we also see that we have actual missing data points. There is a whole area in the Alps that is not well covered. This is actually a well known effect of the measurement technique. We cannot address all geometric effects with radiometric terrain correction in microwave remote sensing. In very steep regions like the Alps, we still have to mask the data due to shadowing and layover effects. Shadowing occurs when the terrain is so steep that it blocks the view of subsequent points, preventing any measurements and obstructing scene reconstruction (See Supplement for more information).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#the-good",
    "href": "02_counterexample.html#the-good",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.6 The Good",
    "text": "2.6 The Good\nThis last step is more subjective and relates to the psychology of colors: the multiple meanings and feelings that people associate with a color. Here we use a linear color gradient developed by TU Wien from brown for dry soils to blue for wet soils.\n\n\nCode\nSSM_CMAP = load_cmap(RESOURCES / \"colour-tables/ssm-continuous.ct\")\nview_monthly_ssm(SSM_dc_monthly, SSM_CMAP)\n\n\n\n\n\n\n\n\nFigure 2.4: Monthly aggregated surface soil moisture (%) for January, April, July and October of 2018 retrieved with the TU Wien algorithm developed for the GHG-Kit project. Maps created with EOmaps (Quast 2024).\n\n\n\n\n\nIn this last rendition of the maps we have a nice linear relation between color and soil moisture, where the brown color evokes images of dried-out soils and the blues of water saturated conditions.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "02_counterexample.html#supplement",
    "href": "02_counterexample.html#supplement",
    "title": "2  How to color your Map: The Good, the Bad and the Ugly",
    "section": "2.7 Supplement",
    "text": "2.7 Supplement\n\n2.7.1 Radiometric Terrain Correction\nMicrowave backscatter has a strong dependency on the viewing angle, meaning that the backscatter measured varies a lot depending on the angle we are looking at the ground. The incident angle under which the ground is viewed from a Sentinel-1 sensor, depends on its orbit. To correct for this, Bauer-Marschallinger et al. (2019) developed a method to normalise to a common incident angle of 40 degrees. However, this method assumes relatively flat topography and can fail in steep and varied terrain. Therefore, we use a high-resolution digital elevation model (DEM) to correct the backscatter at high resolution before up-sampling to 500 meters and normalizing to the common incident angle.\n\n\n2.7.2 Dense Vegetation Filtering\nDense vegetation can obstruct the signal from the soil, or it might be so weak that it’s indistinguishable from noise. To amplify the signal over densely vegetated areas Massart et al. (2024) developed a spatial filtering method to mask dense vegetation at high resolution before up-sampling to 500 m. By doing this the 500 m pixel contains a stronger signal from the soil, facilitating easier soil moisture retrieval.\n\n\n2.7.3 Shadowing and Layover\nLayover occurs because microwave radar measures the distance between the sensor and a point on the ground. In very steep and high terrain, the terrain is “closer” to the sensor, shortening the measured distance and causing the point to appear before others in the raster.\n\n\n\n\nBauer-Marschallinger, Bernhard, Vahid Freeman, Senmao Cao, Christoph Paulik, Stefan Schaufler, Tobias Stachl, Sara Modanesi, et al. 2019. “Toward Global Soil Moisture Monitoring With Sentinel-1: Harnessing Assets and Overcoming Obstacles.” IEEE Transactions on Geoscience and Remote Sensing 57 (1): 520–39. https://doi.org/10.1109/TGRS.2018.2858004.\n\n\nMassart, Samuel, Mariette Vreugdenhil, Bernhard Bauer-Marschallinger, Claudio Navacchi, Bernhard Raml, and Wolfgang Wagner. 2024. “Mitigating the Impact of Dense Vegetation on the Sentinel-1 Surface Soil Moisture Retrievals over Europe.” European Journal of Remote Sensing 57 (1): 2300985. https://doi.org/10.1080/22797254.2023.2300985.\n\n\nQuast, Raphael. 2024. “Getting Started — EOmaps Documentation.” https://eomaps.readthedocs.io/en/latest/.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>How to color your Map: The Good, the Bad and the Ugly</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bauer-Marschallinger, Bernhard, Senmao Cao, Mark Edwin Tupas, Florian\nRoth, Claudio Navacchi, Thomas Melzer, Vahid Freeman, and Wolfgang\nWagner. 2022. “Satellite-Based Flood\nMapping Through Bayesian\nInference from a Sentinel-1 SAR\nDatacube.” Remote Sensing 14 (15): 3673. https://doi.org/10.3390/rs14153673.\n\n\nBauer-Marschallinger, Bernhard, Vahid Freeman, Senmao Cao, Christoph\nPaulik, Stefan Schaufler, Tobias Stachl, Sara Modanesi, et al. 2019.\n“Toward Global Soil\nMoisture Monitoring With\nSentinel-1: Harnessing Assets and\nOvercoming Obstacles.” IEEE\nTransactions on Geoscience and Remote Sensing 57 (1): 520–39. https://doi.org/10.1109/TGRS.2018.2858004.\n\n\nMassart, Samuel, Mariette Vreugdenhil, Bernhard Bauer-Marschallinger,\nClaudio Navacchi, Bernhard Raml, and Wolfgang Wagner. 2024.\n“Mitigating the Impact of Dense Vegetation on the\nSentinel-1 Surface Soil Moisture Retrievals over\nEurope.” European Journal of Remote Sensing\n57 (1): 2300985. https://doi.org/10.1080/22797254.2023.2300985.\n\n\nQuast, Raphael. 2024. “Getting Started —\nEOmaps Documentation.” https://eomaps.readthedocs.io/en/latest/.",
    "crumbs": [
      "References"
    ]
  }
]